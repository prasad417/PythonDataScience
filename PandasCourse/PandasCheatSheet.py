from utils.Color import Color
import numpy as np
import pandas as pd

dataSheet = '../vgsales.csv'


df = pd.read_csv(dataSheet)
print(df)
print(df.shape)
print(df.head())
print(df.tail())
print(df[2:5])
print()
print(df.describe())
print(df.values)
# print(df)
# print(f'{Color.BOLD}======================================================================={Color.END}')
# print(f'{Color.BOLD}Convert python list or list of lists to numpy array: np.array(myList){Color.END}')
# print(f'{Color.BOLD}======================================================================={Color.END}')
# myList = [1, 2, 3, 4, 5, 6]
# print(f'myList = {myList}, np.array(myList)= {np.array(myList)}')
# myMat = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
# print(f'myMat = {myMat}, np.array(myMat) = {np.array(myMat)}')
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}======================================================================={Color.END}')
# print(f'{Color.BOLD}Numpy built in array generate: np.arange(15), from 0 to (15 - 1){Color.END}')
# print(f'{Color.BOLD}======================================================================={Color.END}')
# autoArray = np.arange(15)
# print(autoArray)
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}============================================================================{Color.END}')
# print(f'{Color.BOLD}Built array with zeros: np.zeros(3) or np.zeros((3, 3)), from 0 to (3 - 1){Color.END}')
# print(f'{Color.BOLD}============================================================================{Color.END}')
# zeroArray = np.zeros(3)
# print(zeroArray)
# print()
# zeroArray = np.zeros((3, 3))
# print(zeroArray)
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}============================================================================{Color.END}')
# print(f'{Color.BOLD}Built array with ones: np.ones(3) or np.ones((3, 3)), from 0 to (3 - 1){Color.END}')
# print(f'{Color.BOLD}============================================================================{Color.END}')
# zeroArray = np.ones(3)
# print(zeroArray)
# print()
# zeroArray = np.ones((3, 3))
# print(zeroArray)
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}============================================================================{Color.END}')
# print(f'{Color.BOLD}Evenly spaced numbers: np.linspace(0, 1, 5){Color.END}')
# print(f'{Color.BOLD}============================================================================{Color.END}')
# linspaceArray = np.linspace(0, 1, 7)
# print(linspaceArray)
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}============================================================================{Color.END}')
# print(f'{Color.BOLD}Identity matrix: np.eye(4), 4 x 4 Matrix{Color.END}')
# print(f'{Color.BOLD}============================================================================{Color.END}')
# identityArray = np.eye(4)
# print(identityArray)
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}========================================================================================{Color.END}')
# print(f'{Color.BOLD}Random matrix: np.random.rand(4) or np.random.randn(4, 4), np.random.randint(4, 100, 5){Color.END}')
# print(f'{Color.BOLD}========================================================================================{Color.END}')
# randomArray = np.random.rand(4)
# print(randomArray)
# print()
# randomArray = np.random.randn(4, 4)
# print(randomArray)
# print()
# randomArray = np.random.randint(4, 100, 5)
# print(randomArray)
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}========================================================================================{Color.END}')
# print(f'{Color.BOLD}Reshape array: np.arange(9).reshape(3, 3){Color.END}')
# print(f'{Color.BOLD}========================================================================================{Color.END}')
# reshapeMatrix = np.arange(9).reshape(3, 3)
# print(reshapeMatrix)
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}========================================================================================{Color.END}')
# print(f'{Color.BOLD}Transpose matrix np.arange(9).reshape(3, 3).T{Color.END}')
# print(f'{Color.BOLD}========================================================================================{Color.END}')
# print(np.arange(9).reshape(3, 3).T)
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print(f'{Color.BOLD}ndarray.shape, This is a tuple of integers indicating the size of the array in each dimension.{Color.END}')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print(f'{Color.BOLD}ndarray.ndim, The number of axes (dimensions) of the array.{Color.END}')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print(f'{Color.BOLD}ndarray.size, The total number of elements of the array.{Color.END}')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print(f'{Color.BOLD}ndarray.max(), The maximum number in the array.{Color.END}')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print(f'{Color.BOLD}ndarray.min(), The minimum number in the array.{Color.END}')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print(f'{Color.BOLD}ndarray.argmax(), The maximum number index in the array.{Color.END}')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print(f'{Color.BOLD}ndarray.argmin(), The minimum number index in the array.{Color.END}')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print('                                                                         ')
# print('                                                                         ')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print(f'{Color.BOLD}ndarray.dtype, An object describing the type of the elements in the array.{Color.END}')
# print(f'{Color.BOLD}=============================================================================================={Color.END}')
# print('                                                                         ')
# print('                                                                         ')
